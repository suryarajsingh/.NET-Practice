Name Hiding : Is a feature that allows the derived/child classes to implement the functionalities of the base class members without having to override ( The child classes will use the same signature as that of the base class and mark it with new keyword)

Types of classes : 
  1. Abstract class : Cannot be instantiated, but can be inherited. It can have both abstract and non-abstract methods. It should have atleast one abstract method. The subclasses can either implement or override its methods
      Abstract Method : Is a method without definition/body/code but only declaration

  2. Sealed Class : Concrete classes, that can be instantiated, and cannot be inherited. Sealed classes are used to avoid extensions

  3. Static Class : Cannot be instantiated nor inherited. Can be used just by calling the class name. All Members of the static class have to be static

  4. Partial Class : can be defined in multiple files. Mulitple developers can work simultaneously.

Interface : are like classes, which contains properties, methods, delegates, events - but only declarations and not implementations.
   Interface members are public by default
   They do not allow explicit access modifiers
   They cannot be instantiated, but a reference object can be made to point to derived class
   The sub classes of the interface will have to provide implementation to all the members.
   A class can inherit from multiple interfaces
   An interface can inherit from other interfaces

Inheritance Chain : Implementation of all the methods in the interface chain (interface inheriting multiple interfaces)

Explicit Implementation of interfaces: Example

Advantages of Interface: loose coupling
 to achieve abstraction
 building component based programming
 plug and play like architecture


Collections: are specialized classes for data storage and retrieval. 
             They are dynamic.
             Allow access using index
             Few collection classes can have different datatypes

ArrayList
SortedList
Stacks
Queus
HashTables

   
